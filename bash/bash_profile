# bash
shopt -s globstar
shopt -s nocaseglob

export LANG=en_US.UTF-8

BLACK='\e[0;30m'
RED='\e[0;31m'
GREEN='\e[0;32m'
YELLOW='\e[0;33m'
BLUE='\e[0;34m'
MAGENTA='\e[01;35m'
CYAN='\e[0;36m'
WHITE='\e[0;37m'

PLATFORM=$(uname)

# bash (osx)
if [ $PLATFORM == 'Darwin' ] && which brew >/dev/null;
then
	export PATH=/usr/local/bin:$PATH

	if [ -f $(brew --prefix)/etc/bash_completion ]; then
		. $(brew --prefix)/etc/bash_completion
	fi

    export SECP=dev

    export VAGRANT_HOME=$HOME/dev/var/vagrant

    export JDK6=/Library/Java/JavaVirtualMachines/1.6.0_65-b14-462.jdk/Contents/Home
    export JDK7=/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home
    export JDK8=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home

    export GITHUB_HOST=github.corp.ebay.com

    # plan9
    export PLAN9=$HOME/dev/opt/plan9port

    # go
    export PATH=$PATH:/usr/local/opt/go/libexec/bin
fi

# linux
if [ $PLATFORM == 'Linux' ]
then
    . /usr/share/bash-completion/bash_completion
    source /usr/share/git/git-prompt.sh

    export SECP=.
    export TERM=xterm-256color
    export JDK7=/usr/lib/jvm/java-7-jdk
    export JDK8=/usr/lib/jvm/java-8-jdk

    alias ls="ls --color"
    source /etc/profile.d/plan9.sh
fi

export DOTFILES=$HOME/$SECP/src/dotfiles

alias mmvn="$HOME/$SECP/opt/maven-mobile/bin/mvn -s $HOME/$SECP/var/mvn/mobile.de/settings.xml"
alias mgradle="GRADLE_USER_HOME=$HOME/dev/var/gradle gradle"

# npm
export PATH=$HOME/$SECP/opt/npm/node_modules/.bin:$PATH

# go
export GOPATH=$HOME/$SECP/src/golang
export PATH=$GOPATH/bin:$PATH

# cd tab completion paths
export CDPATH=.:$HOME/$SECP/src/java:$HOME/$SECP/src:$HOME/$SECP:$GOPATH/src

export _PATH="$PATH"
function jenv() {

case $1 in
    '6')
        JAVA_HOME=$JDK6
        ;;
    '7')
        JAVA_HOME=$JDK7
        ;;
    '8')
        JAVA_HOME=$JDK8
        ;;
esac

export JAVA_HOME
export PATH=$JAVA_HOME/bin:$_PATH

# reset getopts
OPTIND=1
}

jenv 8

function sbtenv() {
local LOGFILE="conf/application-logger-dev.xml"
local SUSPEND="n"

while getopts ":d:sl:" opt
do
    case $opt in
        s)
            SUSPEND="y"
            ;;
        d)
            DEBUG_PORT="$OPTARG"
            ;;
        l)
            LOGFILE="$OPTARG"
            ;;
    esac
done

SBT_OPTS="-Dsbt.global.base=$HOME/$SECP/var/sbt -Dsbt.ivy.home=$HOME/$SECP/var/ivy"
SBT_OPTS="$SBT_OPTS -Xms512M -Xmx1536M -Xss1M -XX:+CMSClassUnloadingEnabled"
SBT_OPTS="$SBT_OPTS -Dlogger.file=$LOGFILE"

if [ -n "$DEBUG_PORT" ]
then
    SBT_OPTS="$SBT_OPTS -agentlib:jdwp=transport=dt_socket,server=y,suspend=$SUSPEND,address=$DEBUG_PORT"
fi
export SBT_OPTS

# reset getopts
OPTIND=1
}

function mvnenv() {
local MVN_MEM="-Xmx2048m -Xms512m"
local SUSPEND="n"
local DEBUG_PORT
while getopts ":m:d:s" opt
do
    case $opt in
        m)
            MVN_MEM="$OPTARG"
            ;;
        d)
            DEBUG_PORT="$OPTARG"
            ;;
        s)
            SUSPEND="y"
            ;;
        d)
            DEBUG_PORT="$OPTARG"
            ;;
    esac
done

if [ -n "$DEBUG_PORT" ]
then
    MVN_DEBUG="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=$DEBUG_PORT,server=y,suspend=$SUSPEND"
else
    unset MVN_DEBUG
fi

# reset getopts
OPTIND=1

export MAVEN_OPTS="$MVN_MEM $MVN_DEBUG"
}

# jvm
export JAVA_OPTS="-Xmx1024m"
mvnenv
sbtenv

# cabal
export PATH=$HOME/.cabal/bin:$PATH

function ps1_gopath() {
    if [ -n "$GOPATH" ]
    then
        echo -e " (go: `basename \"$GOPATH\"`)"
    fi
}

function ps1_lastcmd() {
    if [ $? = 0 ]
    then
        echo -e ":)"
    else
        echo -e ":("
    fi
}

function prompt() {
    if [ -n "$TMUX" ]
    then
        tmux rename-window ${PWD##*/}
    fi

    PS1="`ps1_lastcmd` \[$CYAN\]\h \[$GREEN\]\A \[$YELLOW\]\w\[$MAGENTA\]\$(__git_ps1)`ps1_gopath`\[\033[00m\]\nÎ» "
}

function h() {
	if [ -z "$1" ]
	then
		history
	else
		history | grep -i "$@"
	fi
}

function show_cmd() {
    echo -ne "\033]0;${PWD} ${BASH_COMMAND}\007"
}

if [ -n "$winid" ]
then
    # redefine cd command for acme Win
    function cd {
        builtin cd $1 && awd $sysname
    }

    # acme terminal settings
    export EDITOR=E
    export PAGER=nobs
    export TERM=dumb
	PS1='$ '
else
    # regular terminal settings
    export EDITOR=vim
	PROMPT_COMMAND=prompt

    # see http://www.davidpashley.com/articles/xterm-titles-with-bash/
    trap show_cmd DEBUG
fi

